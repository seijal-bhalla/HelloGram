
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.Array;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JProgressBar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DELL
 */
public class StatusForm extends javax.swing.JFrame {

    /**
     * Creates new form StatusForm
     */
    public StatusForm() {
        initComponents();
    }

    String pid;
    String data;
    int bar_len;
    ArrayList<array_list> a1;
    JProgressBar pblist[];

    int startindex = 0;

    StatusForm(String pid) throws IOException {
        initComponents();
        this.pid = pid;
        setSize(800, 700);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        a1 = new ArrayList<>();

        get_status(pid);

    }

    public void get_status(String pid) throws MalformedURLException, IOException {
        try {
            HttpResponse<String> rs = Unirest.get("http://localhost:8999/getstatus")
                    .queryString("pid", pid)
                    .asString();

            if (rs.getStatus() == 200) {
//                array_list obj = new array_list();
//                for(int i=0;i<a1.size();i++)
//                {
//                    JProgressBar jp = new JProgressBar();
//                    jp.setBounds(x, 10,bar_len , 0);
//                    String photo = 
//                    
//                }
                data = rs.getBody();
                StringTokenizer st = new StringTokenizer(data, "$");
                int count = 0;

                while (st.hasMoreTokens()) {
                    String userdata = st.nextToken();
                    StringTokenizer st1 = new StringTokenizer(userdata, ";#");
                    String photo = st1.nextToken();
                    String caption = st1.nextToken();

                    array_list obj = new array_list(photo, caption);
                    a1.add(obj);

                    count += 1;
                }
                System.out.println(count);
                int len = sbpanel.getWidth();
                bar_len = len / count;

                int x = 5;
                pblist = new JProgressBar[count];

                for (int i = 0; i < count; i++) {
                    pblist[i] = new JProgressBar();
                    pblist[i].setBounds(x, 5, bar_len - 5, 10);
                    x += bar_len - 5;
                    sbpanel.add(pblist[i]);
                }

                sbpanel.repaint();

                runProgress();
            }

        } catch (UnirestException ex) {
            ex.printStackTrace();
        }
    }

    public void runProgress() {

        new Thread(new Runnable() {
            @Override
            public void run() {

                try {

                    URL url = new URL("http://localhost:8999/GetResource/" + a1.get(startindex).photo);
                    BufferedImage bimg = ImageIO.read(url);
                    Image img = bimg.getScaledInstance(storylb.getWidth(), storylb.getHeight(), Image.SCALE_SMOOTH);
                    storylb.setIcon(new ImageIcon(img));

                    captionlb.setText(a1.get(startindex).caption);

                    for (int i = 1; i <= 100; i++) {

                        pblist[startindex].setValue(i);
                        Thread.sleep(100);
                    }

                    startindex++;

                    if (startindex == a1.size()) {

                    } else {
                        runProgress();
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                }

            }
        }).start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sbpanel = new javax.swing.JPanel();
        storylb = new javax.swing.JLabel();
        captionlb = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        sbpanel.setBackground(new java.awt.Color(255, 255, 255));
        sbpanel.setLayout(null);
        getContentPane().add(sbpanel);
        sbpanel.setBounds(20, 30, 660, 40);

        storylb.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(storylb);
        storylb.setBounds(90, 100, 490, 270);

        captionlb.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(captionlb);
        captionlb.setBounds(100, 410, 500, 70);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StatusForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StatusForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StatusForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StatusForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StatusForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel captionlb;
    private javax.swing.JPanel sbpanel;
    private javax.swing.JLabel storylb;
    // End of variables declaration//GEN-END:variables

    //ArrayList <String> a1;
    class array_list {

//                public array_list()
//                {
//                StringTokenizer st = new StringTokenizer(data, "$");
//                while(st.hasMoreTokens())
//   
//                {
//                    String userdata = st.nextToken();
//                    StringTokenizer st1 = new StringTokenizer(userdata, ";#");
//                    String photo = st1.nextToken();
//                    String caption = st1.nextToken();
//                    
//                    a1 = new ArrayList<>();
//                    a1.add(photo);
//                    a1.add(caption);
//                    count+=1;
//                   
//                }       
//                bar_len = a1.size()/count;
//                System.out.println(a1);
//                System.out.println(bar_len);
//    }
        String photo;
        String caption;

        public array_list(String photo, String caption) {
            this.caption = caption;
            this.photo = photo;
        }
    }
}
