
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import com.mashape.unirest.http.exceptions.UnirestException;
import com.mashape.unirest.request.HttpRequest;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author DELL
 */
public class Following extends javax.swing.JFrame {

    /**
     * Creates new form Following
     */
    public Following() {
        initComponents();
        setSize(800, 700);
        //getfollowing();

    }

    String username;

    Following(String username) throws IOException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        initComponents();
        this.username = username;
        setSize(800, 700);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        try {
            getfollowing(username);
        } catch (UnirestException ex) {
            Logger.getLogger(Following.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fpanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        fpanel.setBackground(new java.awt.Color(255, 255, 255));
        fpanel.setLayout(null);
        getContentPane().add(fpanel);
        fpanel.setBounds(30, 30, 520, 390);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Following.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Following.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Following.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Following.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Following().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel fpanel;
    // End of variables declaration//GEN-END:variables

    public void getfollowing(String username1) throws UnirestException, MalformedURLException, IOException {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        HttpResponse<String> res = Unirest.get("http://localhost:8999/following")
                .queryString("username", username)
                .asString();

        if (res.getStatus() == 200) {
            int y = 10;
            int mainheight = 100;
            String data = res.getBody();
            StringTokenizer st = new StringTokenizer(data, "$");

            fpanel.removeAll();
            while (st.hasMoreTokens()) {

                String userdata = st.nextToken();
                //System.out.println(userdata);
                StringTokenizer st1 = new StringTokenizer(userdata, ";#");
                String followedto = st1.nextToken();
                String fid = st1.nextToken();
                String photo = st1.nextToken();
                Followingpanel fp = new Followingpanel();
                fp.setBounds(10, y, 500, 80);
                fpanel.add(fp);

                URL url = new URL("http://localhost:8999/GetResource/" + photo);
                BufferedImage bimg = ImageIO.read(url);
                Image img = bimg.getScaledInstance(fp.photolb.getWidth(), fp.photolb.getHeight(), Image.SCALE_SMOOTH);
                fp.photolb.setIcon(new ImageIcon(img));

                fp.usernamelb.setText(followedto);

                fp.unfollowbtn.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent ae) {

                        try {
                            HttpResponse<String> res = Unirest.get("http://localhost:8999/unfollowuser")
                                    .queryString("fid", fid)
                                    .asString();

                            if (res.getStatus() == 200) {
                                String responsetext = res.getBody();
                                JOptionPane.showMessageDialog(fpanel, responsetext);
                                getfollowing(username);
                            }
                            //System.out.println(user_n);
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }
                        
                        }
                    
                });

                y += 90;
                mainheight += 90;
            }
            
            fpanel.repaint();
            
        }
        
        
        
 

    }

}
